{"ast":null,"code":"var _jsxFileName = \"/home/daianebarizon/Repositories/popcorn2/popcorn-time-site/components/Text/Text.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { theme } from 'styled-tools';\nimport { typography } from 'styled-system';\nimport Truncate from 'react-truncate';\nimport { Box } from '../Box';\nexport const TextStyled = styled(Box).attrs(props => ({\n  color: props.color || 'white'\n}))`\n    ${typography} ::selection {\n        background-color: ${theme('primary')};\n    }\n`;\nexport const Text = _ref => {\n  let {\n    children,\n    truncate\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"truncate\"]);\n\n  const content = useMemo(() => {\n    if (!!truncate) {\n      return __jsx(Truncate, _extends({}, truncate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      }), children);\n    }\n\n    return children;\n  }, [truncate]);\n  return __jsx(TextStyled, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }), content);\n};","map":{"version":3,"sources":["/home/daianebarizon/Repositories/popcorn2/popcorn-time-site/components/Text/Text.tsx"],"names":["React","useMemo","styled","theme","typography","Truncate","Box","TextStyled","attrs","props","color","Text","children","truncate","content"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,UAAT,QAA4C,eAA5C;AACA,OAAOC,QAAP,MAAwC,gBAAxC;AACA,SAASC,GAAT,QAA8B,QAA9B;AAUA,OAAO,MAAMC,UAAU,GAAGL,MAAM,CAACI,GAAD,CAAN,CAAYE,KAAZ,CAAmBC,KAAD,KAAY;AACpDC,EAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,IAAe;AAD8B,CAAZ,CAAlB,CAEX;AACf,MAAMN,UAAW;AACjB,4BAA4BD,KAAK,CAAC,SAAD,CAAY;AAC7C;AACA,CANO;AAQP,OAAO,MAAMQ,IAAyB,GAAG,QAAsC;AAAA,MAArC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAqC;AAAA,MAAZJ,KAAY;;AAC3E,QAAMK,OAAO,GAAGb,OAAO,CAAC,MAAM;AAC1B,QAAI,CAAC,CAACY,QAAN,EAAgB;AACZ,aAAO,MAAC,QAAD,eAAcA,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBD,QAAzB,CAAP;AACH;;AACD,WAAOA,QAAP;AACH,GALsB,EAKpB,CAACC,QAAD,CALoB,CAAvB;AAOA,SAAO,MAAC,UAAD,eAAgBJ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBK,OAAxB,CAAP;AACH,CATM","sourcesContent":["import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport { typography, TypographyProps } from 'styled-system';\r\nimport Truncate, { TruncateProps } from 'react-truncate';\r\nimport { Box, BoxProps } from '../Box';\r\n\r\nexport type TextPropsStyled = BoxProps & TypographyProps;\r\n\r\nexport type TextProps = TextPropsStyled & {\r\n    truncate?: TruncateProps;\r\n    as?: any;\r\n    htmlFor?: string;\r\n} & React.AnchorHTMLAttributes<HTMLAnchorElement>;\r\n\r\nexport const TextStyled = styled(Box).attrs((props) => ({\r\n    color: props.color || 'white',\r\n}))<TextProps>`\r\n    ${typography} ::selection {\r\n        background-color: ${theme('primary')};\r\n    }\r\n`;\r\n\r\nexport const Text: React.FC<TextProps> = ({ children, truncate, ...props }) => {\r\n    const content = useMemo(() => {\r\n        if (!!truncate) {\r\n            return <Truncate {...truncate}>{children}</Truncate>;\r\n        }\r\n        return children;\r\n    }, [truncate]);\r\n\r\n    return <TextStyled {...props}>{content}</TextStyled>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}