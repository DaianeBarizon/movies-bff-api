{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _excluded = [\"children\", \"truncate\"];\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"/home/daianebarizon/Repositories/popcorn2/popcorn-time-site/components/Text/Text.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { theme } from 'styled-tools';\nimport { typography } from 'styled-system';\nimport Truncate from 'react-truncate';\nimport { Box } from '../Box';\nexport var TextStyled = styled(Box).attrs(function (props) {\n  return {\n    color: props.color || 'white'\n  };\n})(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    \", \" ::selection {\\n        background-color: \", \";\\n    }\\n\"])), typography, theme('primary'));\n_c = TextStyled;\nexport var Text = function Text(_ref) {\n  _s();\n\n  var children = _ref.children,\n      truncate = _ref.truncate,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var content = useMemo(function () {\n    if (!!truncate) {\n      return __jsx(Truncate, _extends({}, truncate, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 20\n        }\n      }), children);\n    }\n\n    return children;\n  }, [truncate]);\n  return __jsx(TextStyled, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }), content);\n};\n\n_s(Text, \"nOKcCO/DZR7PO8GpYaNDiNh8hVA=\");\n\n_c2 = Text;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextStyled\");\n$RefreshReg$(_c2, \"Text\");","map":{"version":3,"sources":["/home/daianebarizon/Repositories/popcorn2/popcorn-time-site/components/Text/Text.tsx"],"names":["React","useMemo","styled","theme","typography","Truncate","Box","TextStyled","attrs","props","color","Text","children","truncate","content"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,UAAT,QAA4C,eAA5C;AACA,OAAOC,QAAP,MAAwC,gBAAxC;AACA,SAASC,GAAT,QAA8B,QAA9B;AAUA,OAAO,IAAMC,UAAU,GAAGL,MAAM,CAACI,GAAD,CAAN,CAAYE,KAAZ,CAAkB,UAACC,KAAD;AAAA,SAAY;AACpDC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,IAAe;AAD8B,GAAZ;AAAA,CAAlB,CAAH,wIAGjBN,UAHiB,EAIKD,KAAK,CAAC,SAAD,CAJV,CAAhB;KAAMI,U;AAQb,OAAO,IAAMI,IAAyB,GAAG,SAA5BA,IAA4B,OAAsC;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZJ,KAAY;;AAC3E,MAAMK,OAAO,GAAGb,OAAO,CAAC,YAAM;AAC1B,QAAI,CAAC,CAACY,QAAN,EAAgB;AACZ,aAAO,MAAC,QAAD,eAAcA,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBD,QAAzB,CAAP;AACH;;AACD,WAAOA,QAAP;AACH,GALsB,EAKpB,CAACC,QAAD,CALoB,CAAvB;AAOA,SAAO,MAAC,UAAD,eAAgBJ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAwBK,OAAxB,CAAP;AACH,CATM;;GAAMH,I;;MAAAA,I","sourcesContent":["import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { theme } from 'styled-tools';\r\nimport { typography, TypographyProps } from 'styled-system';\r\nimport Truncate, { TruncateProps } from 'react-truncate';\r\nimport { Box, BoxProps } from '../Box';\r\n\r\nexport type TextPropsStyled = BoxProps & TypographyProps;\r\n\r\nexport type TextProps = TextPropsStyled & {\r\n    truncate?: TruncateProps;\r\n    as?: any;\r\n    htmlFor?: string;\r\n} & React.AnchorHTMLAttributes<HTMLAnchorElement>;\r\n\r\nexport const TextStyled = styled(Box).attrs((props) => ({\r\n    color: props.color || 'white',\r\n}))<TextProps>`\r\n    ${typography} ::selection {\r\n        background-color: ${theme('primary')};\r\n    }\r\n`;\r\n\r\nexport const Text: React.FC<TextProps> = ({ children, truncate, ...props }) => {\r\n    const content = useMemo(() => {\r\n        if (!!truncate) {\r\n            return <Truncate {...truncate}>{children}</Truncate>;\r\n        }\r\n        return children;\r\n    }, [truncate]);\r\n\r\n    return <TextStyled {...props}>{content}</TextStyled>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}